#!/bin/bash

# Function to extract JSON values without jq
extract_json_value() {
    local json=$1
    local key=$2
    echo $json | sed -n "s|.*\"$key\":\"\([^\"]*\)\".*|\1|p"
}

# Function to print resource information
print_resource_names() {
    local resource_type=$1
    local aws_command=$2
    local name_key=$3

    # Execute the AWS CLI command and capture JSON output
    resources=$(eval $aws_command 2>/dev/null | grep -o '{[^}]*}')

    # Check if no resources were found
    if [ -z "$resources" ]; then
        echo "No resources found for $resource_type."
        return
    fi

    # Iterate over each resource JSON object and print the name
    for resource in $resources; do
        resource_name=$(extract_json_value "$resource" "$name_key")
        [ -z "$resource_name" ] && resource_name=$(extract_json_value "$resource" "Name")
        [ -z "$resource_name" ] && resource_name=$(extract_json_value "$resource" "ResourceName")
        [ -z "$resource_name" ] && resource_name=$(extract_json_value "$resource" "DBInstanceIdentifier")
        [ -z "$resource_name" ] && resource_name=$(extract_json_value "$resource" "FunctionName")
        [ -z "$resource_name" ] && resource_name=$(extract_json_value "$resource" "BucketName")
        [ -z "$resource_name" ] && resource_name=$(extract_json_value "$resource" "StackName")

        # Print resource information
        echo "${resource_type}, ${resource_name}"
    done
}

# List of resource types and corresponding AWS CLI commands
declare -A resource_types=(
    ["EC2 Instances"]="aws ec2 describe-instances --query 'Reservations[].Instances[].{Name:Tags[?Key==`Name`].Value | [0], ResourceName:InstanceId}'"
    ["S3 Buckets"]="aws s3api list-buckets --query 'Buckets[].{Name:Name}'"
    ["Lambda Functions"]="aws lambda list-functions --query 'Functions[].{Name:FunctionName}'"
    ["RDS Instances"]="aws rds describe-db-instances --query 'DBInstances[].{Name:DBInstanceIdentifier}'"
    ["CloudFormation Stacks"]="aws cloudformation list-stacks --query 'StackSummaries[].{Name:StackName}'"
    ["EC2 AMIs"]="aws ec2 describe-images --owners self --query 'Images[].{Name:Name}'"
    ["DynamoDB Tables"]="aws dynamodb list-tables --query 'TableNames[]'"
    ["SQS Queues"]="aws sqs list-queues --query 'QueueUrls[]' | awk -F'/' '{print $NF}'"
    ["SNS Topics"]="aws sns list-topics --query 'Topics[].{Name:TopicArn}'"
    ["ECR Repositories"]="aws ecr describe-repositories --query 'repositories[].{Name:repositoryName}'"
    ["ECS Clusters"]="aws ecs list-clusters --query 'clusterArns[]' | awk -F'/' '{print $NF}'"
    ["Elastic Load Balancers"]="aws elb describe-load-balancers --query 'LoadBalancerDescriptions[].{Name:LoadBalancerName}'"
    ["ALB/NLB"]="aws elbv2 describe-load-balancers --query 'LoadBalancers[].{Name:LoadBalancerName}'"
    ["CloudWatch Log Groups"]="aws logs describe-log-groups --query 'logGroups[].{Name:logGroupName}'"
    ["IAM Roles"]="aws iam list-roles --query 'Roles[].{Name:RoleName}'"
    ["IAM Users"]="aws iam list-users --query 'Users[].{Name:UserName}'"
    ["IAM Policies"]="aws iam list-policies --query 'Policies[].{Name:PolicyName}'"
    ["IAM Groups"]="aws iam list-groups --query 'Groups[].{Name:GroupName}'"
    ["CloudFront Distributions"]="aws cloudfront list-distributions --query 'DistributionList.Items[].{Name:Id}'"
    ["Route 53 Hosted Zones"]="aws route53 list-hosted-zones --query 'HostedZones[].{Name:Name}'"
    ["Auto Scaling Groups"]="aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[].{Name:AutoScalingGroupName}'"
    ["KMS Keys"]="aws kms list-keys --query 'Keys[].KeyId'"
    ["ElastiCache Clusters"]="aws elasticache describe-cache-clusters --query 'CacheClusters[].{Name:CacheClusterId}'"
    ["EMR Clusters"]="aws emr list-clusters --query 'Clusters[].{Name:Name}'"
    ["CloudWatch Alarms"]="aws cloudwatch describe-alarms --query 'MetricAlarms[].{Name:AlarmName}'"
)

# Iterate over resource types and print resource names
for resource_type in "${!resource_types[@]}"; do
    print_resource_names "$resource_type" "${resource_types[$resource_type]}" "Name"
done
